<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapper.BuildingMapper">
  <resultMap id="BaseResultMap" type="com.ssm.pojo.Building">
    <id column="building_id" jdbcType="INTEGER" property="buildingId" />
    <result column="building_name" jdbcType="VARCHAR" property="buildingName" />
    <result column="building_datetime" jdbcType="TIMESTAMP" property="buildingDatetime" />
    <result column="building_layer" jdbcType="INTEGER" property="buildingLayer" />
    <result column="buidling_area" jdbcType="REAL" property="buidlingArea" />
    <result column="building_code" jdbcType="VARCHAR" property="buildingCode" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ssm.pojo.Building">
    <result column="building_memo" jdbcType="LONGVARCHAR" property="buildingMemo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    building_id, building_name, building_datetime, building_layer, buidling_area, building_code
  </sql>
  <sql id="Blob_Column_List">
    building_memo
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ssm.pojo.BuildingExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from building
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ssm.pojo.BuildingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from building
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from building
    where building_id = #{buildingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from building
    where building_id = #{buildingId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.pojo.BuildingExample">
    delete from building
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.pojo.Building">
    insert into building (building_id, building_name, building_datetime, 
      building_layer, buidling_area, building_code, 
      building_memo)
    values (#{buildingId,jdbcType=INTEGER}, #{buildingName,jdbcType=VARCHAR}, #{buildingDatetime,jdbcType=TIMESTAMP}, 
      #{buildingLayer,jdbcType=INTEGER}, #{buidlingArea,jdbcType=REAL}, #{buildingCode,jdbcType=VARCHAR}, 
      #{buildingMemo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.pojo.Building">
    insert into building
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="buildingId != null">
        building_id,
      </if>
      <if test="buildingName != null">
        building_name,
      </if>
      <if test="buildingDatetime != null">
        building_datetime,
      </if>
      <if test="buildingLayer != null">
        building_layer,
      </if>
      <if test="buidlingArea != null">
        buidling_area,
      </if>
      <if test="buildingCode != null">
        building_code,
      </if>
      <if test="buildingMemo != null">
        building_memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="buildingId != null">
        #{buildingId,jdbcType=INTEGER},
      </if>
      <if test="buildingName != null">
        #{buildingName,jdbcType=VARCHAR},
      </if>
      <if test="buildingDatetime != null">
        #{buildingDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="buildingLayer != null">
        #{buildingLayer,jdbcType=INTEGER},
      </if>
      <if test="buidlingArea != null">
        #{buidlingArea,jdbcType=REAL},
      </if>
      <if test="buildingCode != null">
        #{buildingCode,jdbcType=VARCHAR},
      </if>
      <if test="buildingMemo != null">
        #{buildingMemo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.pojo.BuildingExample" resultType="java.lang.Long">
    select count(*) from building
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update building
    <set>
      <if test="record.buildingId != null">
        building_id = #{record.buildingId,jdbcType=INTEGER},
      </if>
      <if test="record.buildingName != null">
        building_name = #{record.buildingName,jdbcType=VARCHAR},
      </if>
      <if test="record.buildingDatetime != null">
        building_datetime = #{record.buildingDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.buildingLayer != null">
        building_layer = #{record.buildingLayer,jdbcType=INTEGER},
      </if>
      <if test="record.buidlingArea != null">
        buidling_area = #{record.buidlingArea,jdbcType=REAL},
      </if>
      <if test="record.buildingCode != null">
        building_code = #{record.buildingCode,jdbcType=VARCHAR},
      </if>
      <if test="record.buildingMemo != null">
        building_memo = #{record.buildingMemo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update building
    set building_id = #{record.buildingId,jdbcType=INTEGER},
      building_name = #{record.buildingName,jdbcType=VARCHAR},
      building_datetime = #{record.buildingDatetime,jdbcType=TIMESTAMP},
      building_layer = #{record.buildingLayer,jdbcType=INTEGER},
      buidling_area = #{record.buidlingArea,jdbcType=REAL},
      building_code = #{record.buildingCode,jdbcType=VARCHAR},
      building_memo = #{record.buildingMemo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update building
    set building_id = #{record.buildingId,jdbcType=INTEGER},
      building_name = #{record.buildingName,jdbcType=VARCHAR},
      building_datetime = #{record.buildingDatetime,jdbcType=TIMESTAMP},
      building_layer = #{record.buildingLayer,jdbcType=INTEGER},
      buidling_area = #{record.buidlingArea,jdbcType=REAL},
      building_code = #{record.buildingCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.pojo.Building">
    update building
    <set>
      <if test="buildingName != null">
        building_name = #{buildingName,jdbcType=VARCHAR},
      </if>
      <if test="buildingDatetime != null">
        building_datetime = #{buildingDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="buildingLayer != null">
        building_layer = #{buildingLayer,jdbcType=INTEGER},
      </if>
      <if test="buidlingArea != null">
        buidling_area = #{buidlingArea,jdbcType=REAL},
      </if>
      <if test="buildingCode != null">
        building_code = #{buildingCode,jdbcType=VARCHAR},
      </if>
      <if test="buildingMemo != null">
        building_memo = #{buildingMemo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where building_id = #{buildingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ssm.pojo.Building">
    update building
    set building_name = #{buildingName,jdbcType=VARCHAR},
      building_datetime = #{buildingDatetime,jdbcType=TIMESTAMP},
      building_layer = #{buildingLayer,jdbcType=INTEGER},
      buidling_area = #{buidlingArea,jdbcType=REAL},
      building_code = #{buildingCode,jdbcType=VARCHAR},
      building_memo = #{buildingMemo,jdbcType=LONGVARCHAR}
    where building_id = #{buildingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.pojo.Building">
    update building
    set building_name = #{buildingName,jdbcType=VARCHAR},
      building_datetime = #{buildingDatetime,jdbcType=TIMESTAMP},
      building_layer = #{buildingLayer,jdbcType=INTEGER},
      buidling_area = #{buidlingArea,jdbcType=REAL},
      building_code = #{buildingCode,jdbcType=VARCHAR}
    where building_id = #{buildingId,jdbcType=INTEGER}
  </update>
</mapper>