<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.mapper.ChargefeeMapper">
  <resultMap id="BaseResultMap" type="com.ssm.pojo.Chargefee">
    <id column="fee_id" jdbcType="INTEGER" property="feeId" />
    <result column="fee_code" jdbcType="VARCHAR" property="feeCode" />
    <result column="fee_type" jdbcType="VARCHAR" property="feeType" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="payment" jdbcType="DECIMAL" property="payment" />
    <result column="factpayment" jdbcType="DECIMAL" property="factpayment" />
    <result column="notpayment" jdbcType="DECIMAL" property="notpayment" />
    <result column="remaining" jdbcType="DECIMAL" property="remaining" />
    <result column="currentdate" jdbcType="TIMESTAMP" property="currentdate" />
    <result column="handle" jdbcType="VARCHAR" property="handle" />
    <result column="beforedate" jdbcType="TIMESTAMP" property="beforedate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    fee_id, fee_code, fee_type, price, payment, factpayment, notpayment, remaining, currentdate, 
    handle, beforedate
  </sql>
  <select id="selectByExample" parameterType="com.ssm.pojo.ChargefeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from chargefee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chargefee
    where fee_id = #{feeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chargefee
    where fee_id = #{feeId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ssm.pojo.ChargefeeExample">
    delete from chargefee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.pojo.Chargefee">
    insert into chargefee (fee_id, fee_code, fee_type, 
      price, payment, factpayment, 
      notpayment, remaining, currentdate, 
      handle, beforedate)
    values (#{feeId,jdbcType=INTEGER}, #{feeCode,jdbcType=VARCHAR}, #{feeType,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{payment,jdbcType=DECIMAL}, #{factpayment,jdbcType=DECIMAL}, 
      #{notpayment,jdbcType=DECIMAL}, #{remaining,jdbcType=DECIMAL}, #{currentdate,jdbcType=TIMESTAMP}, 
      #{handle,jdbcType=VARCHAR}, #{beforedate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.pojo.Chargefee">
    insert into chargefee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="feeId != null">
        fee_id,
      </if>
      <if test="feeCode != null">
        fee_code,
      </if>
      <if test="feeType != null">
        fee_type,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="factpayment != null">
        factpayment,
      </if>
      <if test="notpayment != null">
        notpayment,
      </if>
      <if test="remaining != null">
        remaining,
      </if>
      <if test="currentdate != null">
        currentdate,
      </if>
      <if test="handle != null">
        handle,
      </if>
      <if test="beforedate != null">
        beforedate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="feeId != null">
        #{feeId,jdbcType=INTEGER},
      </if>
      <if test="feeCode != null">
        #{feeCode,jdbcType=VARCHAR},
      </if>
      <if test="feeType != null">
        #{feeType,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="factpayment != null">
        #{factpayment,jdbcType=DECIMAL},
      </if>
      <if test="notpayment != null">
        #{notpayment,jdbcType=DECIMAL},
      </if>
      <if test="remaining != null">
        #{remaining,jdbcType=DECIMAL},
      </if>
      <if test="currentdate != null">
        #{currentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="handle != null">
        #{handle,jdbcType=VARCHAR},
      </if>
      <if test="beforedate != null">
        #{beforedate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ssm.pojo.ChargefeeExample" resultType="java.lang.Long">
    select count(*) from chargefee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chargefee
    <set>
      <if test="record.feeId != null">
        fee_id = #{record.feeId,jdbcType=INTEGER},
      </if>
      <if test="record.feeCode != null">
        fee_code = #{record.feeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.feeType != null">
        fee_type = #{record.feeType,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.payment != null">
        payment = #{record.payment,jdbcType=DECIMAL},
      </if>
      <if test="record.factpayment != null">
        factpayment = #{record.factpayment,jdbcType=DECIMAL},
      </if>
      <if test="record.notpayment != null">
        notpayment = #{record.notpayment,jdbcType=DECIMAL},
      </if>
      <if test="record.remaining != null">
        remaining = #{record.remaining,jdbcType=DECIMAL},
      </if>
      <if test="record.currentdate != null">
        currentdate = #{record.currentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.handle != null">
        handle = #{record.handle,jdbcType=VARCHAR},
      </if>
      <if test="record.beforedate != null">
        beforedate = #{record.beforedate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chargefee
    set fee_id = #{record.feeId,jdbcType=INTEGER},
      fee_code = #{record.feeCode,jdbcType=VARCHAR},
      fee_type = #{record.feeType,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      payment = #{record.payment,jdbcType=DECIMAL},
      factpayment = #{record.factpayment,jdbcType=DECIMAL},
      notpayment = #{record.notpayment,jdbcType=DECIMAL},
      remaining = #{record.remaining,jdbcType=DECIMAL},
      currentdate = #{record.currentdate,jdbcType=TIMESTAMP},
      handle = #{record.handle,jdbcType=VARCHAR},
      beforedate = #{record.beforedate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.pojo.Chargefee">
    update chargefee
    <set>
      <if test="feeCode != null">
        fee_code = #{feeCode,jdbcType=VARCHAR},
      </if>
      <if test="feeType != null">
        fee_type = #{feeType,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="factpayment != null">
        factpayment = #{factpayment,jdbcType=DECIMAL},
      </if>
      <if test="notpayment != null">
        notpayment = #{notpayment,jdbcType=DECIMAL},
      </if>
      <if test="remaining != null">
        remaining = #{remaining,jdbcType=DECIMAL},
      </if>
      <if test="currentdate != null">
        currentdate = #{currentdate,jdbcType=TIMESTAMP},
      </if>
      <if test="handle != null">
        handle = #{handle,jdbcType=VARCHAR},
      </if>
      <if test="beforedate != null">
        beforedate = #{beforedate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where fee_id = #{feeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.pojo.Chargefee">
    update chargefee
    set fee_code = #{feeCode,jdbcType=VARCHAR},
      fee_type = #{feeType,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      payment = #{payment,jdbcType=DECIMAL},
      factpayment = #{factpayment,jdbcType=DECIMAL},
      notpayment = #{notpayment,jdbcType=DECIMAL},
      remaining = #{remaining,jdbcType=DECIMAL},
      currentdate = #{currentdate,jdbcType=TIMESTAMP},
      handle = #{handle,jdbcType=VARCHAR},
      beforedate = #{beforedate,jdbcType=TIMESTAMP}
    where fee_id = #{feeId,jdbcType=INTEGER}
  </update>
</mapper>